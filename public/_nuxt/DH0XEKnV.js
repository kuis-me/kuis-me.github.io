import{r as s}from"#entry";const t=[];for(let e=0;e<256;++e)t.push((e+256).toString(16).slice(1));function l(e,n=0){return(t[e[n+0]]+t[e[n+1]]+t[e[n+2]]+t[e[n+3]]+"-"+t[e[n+4]]+t[e[n+5]]+"-"+t[e[n+6]]+t[e[n+7]]+"-"+t[e[n+8]]+t[e[n+9]]+"-"+t[e[n+10]]+t[e[n+11]]+t[e[n+12]]+t[e[n+13]]+t[e[n+14]]+t[e[n+15]]).toLowerCase()}let d;const m=new Uint8Array(16);function a(){if(!d){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");d=crypto.getRandomValues.bind(crypto)}return d(m)}const g=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),i={randomUUID:g};function p(e,n,c){e=e||{};const o=e.random??e.rng?.()??a();if(o.length<16)throw new Error("Random bytes length must be >= 16");return o[6]=o[6]&15|64,o[8]=o[8]&63|128,l(o)}function r(e,n,c){return i.randomUUID&&!e?i.randomUUID():p(e)}const y=()=>{const e=s("");return(()=>{{const o=localStorage.getItem("device_id");if(o)e.value=o;else{const u=r();localStorage.setItem("device_id",u),e.value=u}}})(),{deviceId:e,resetDeviceId:()=>{{const o=r();localStorage.setItem("device_id",o),e.value=o}}}};export{y as u};
